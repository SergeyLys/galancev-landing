@charset 'UTF-8';/**
 * Foundation for Sites by ZURB
 * Version 6.3.1
 * foundation.zurb.com
 * Licensed under MIT Open Source
 *//*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss *//* Document
       ========================================================================== *//**
     * 1. Change the default font family in all browsers (opinionated).
     * 2. Correct the line height in all browsers.
     * 3. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */html
{
    font-family: sans-serif;
    /* 1 */
    line-height: 1.15;
    /* 2 */

        -ms-text-size-adjust: 100%;
    /* 3 */
    -webkit-text-size-adjust: 100%;
    /* 3 */;
}/* Sections
       ========================================================================== *//**
     * Remove the margin in all browsers (opinionated).
     */body
{
    margin: 0;
}/**
     * Add the correct display in IE 9-.
     */article,
aside,
footer,
header,
nav,
section
{
    display: block;
}/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */h1
{
    font-size: 2em;

    margin: .67em 0;
}/* Grouping content
       ========================================================================== *//**
     * Add the correct display in IE 9-.
     */figcaption,
figure
{
    display: block;
}/**
     * Add the correct margin in IE 8.
     */figure
{
    margin: 1em 40px;
}/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */hr
{
    /* 1 */
    overflow: visible;

    box-sizing: content-box;
    /* 1 */
    height: 0;
    /* 2 */;
}/**
     * Add the correct display in IE.
     */main
{
    display: block;
}/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */pre
{
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */;
}/* Links
       ========================================================================== *//**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */a
{
    background-color: transparent;
    /* 1 */

    -webkit-text-decoration-skip: objects;
    /* 2 */;
}/**
     * Remove the outline on focused links when they are also active or hovered
     * in all browsers (opinionated).
     */a:active,
a:hover
{
    outline-width: 0;
}/* Text-level semantics
       ========================================================================== *//**
     * 1. Remove the bottom border in Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */abbr[title]
{
    /* 1 */
    text-decoration: underline;
    /* 2 */
    text-decoration: underline dotted;

    border-bottom: none;
    /* 2 */;
}/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */b,
strong
{
    font-weight: inherit;
}/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */b,
strong
{
    font-weight: bolder;
}/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */code,
kbd,
samp
{
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */;
}/**
     * Add the correct font style in Android 4.3-.
     */dfn
{
    font-style: italic;
}/**
     * Add the correct background and color in IE 9-.
     */mark
{
    color: #000;
    background-color: #ff0;
}/**
     * Add the correct font size in all browsers.
     */small
{
    font-size: 80%;
}/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */sub,
sup
{
    font-size: 75%;
    line-height: 0;

    position: relative;

    vertical-align: baseline;
}

sub
{
    bottom: -.25em;
}

sup
{
    top: -.5em;
}/* Embedded content
       ========================================================================== *//**
     * Add the correct display in IE 9-.
     */audio,
video
{
    display: inline-block;
}/**
     * Add the correct display in iOS 4-7.
     */audio:not([controls])
{
    display: none;

    height: 0;
}/**
     * Remove the border on images inside links in IE 10-.
     */img
{
    border-style: none;
}/**
     * Hide the overflow in IE.
     */svg:not(:root)
{
    overflow: hidden;
}/* Forms
       ========================================================================== *//**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */button,
input,
optgroup,
select,
textarea
{
    font-family: sans-serif;
    /* 1 */
    font-size: 100%;
    /* 1 */
    line-height: 1.15;
    /* 1 */

    margin: 0;
    /* 2 */;
}/**
     * Show the overflow in IE.
     */button
{
    overflow: visible;
}/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */button,
select
{
    /* 1 */
    text-transform: none;
}/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */button,
html [type='button'],
[type='reset'],
[type='submit']
{
    -webkit-appearance: button;
    /* 2 */;
}

button,
[type='button'],
[type='reset'],
[type='submit']
{
    /**
       * Remove the inner border and padding in Firefox.
       */ /**
       * Restore the focus styles unset by the previous rule.
       */;
}

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner
{
    padding: 0;

    border-style: none;
}

button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring
{
    outline: 1px dotted ButtonText;
}/**
     * Show the overflow in Edge.
     */input
{
    overflow: visible;
}/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */[type='checkbox'],
[type='radio']
{
    box-sizing: border-box;
    /* 1 */
    padding: 0;
    /* 2 */;
}/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button
{
    height: auto;
}/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */[type='search']
{
    /* 1 */
    outline-offset: -2px;

    -webkit-appearance: textfield;
    /* 2 */ /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */;
}

[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration
{
    -webkit-appearance: none;
}/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */::-webkit-file-upload-button
{
    /* 1 */
    font: inherit;

    -webkit-appearance: button;
    /* 2 */;
}/**
     * Change the border, margin, and padding in all browsers (opinionated).
     */fieldset
{
    margin: 0 2px;
    padding: .35em .625em .75em;

    border: 1px solid #c0c0c0;
}/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */legend
{
    /* 1 */
    display: table;

    box-sizing: border-box;
    /* 1 */
    max-width: 100%;
    /* 1 */
    padding: 0;
    /* 2 */

    white-space: normal;
    /* 3 */

    color: inherit;
    /* 1 */;
}/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */progress
{
    display: inline-block;
    /* 1 */

    vertical-align: baseline;
    /* 2 */;
}/**
     * Remove the default vertical scrollbar in IE.
     */textarea
{
    overflow: auto;
}/* Interactive
       ========================================================================== *//*
     * Add the correct display in Edge, IE, and Firefox.
     */details
{
    display: block;
}/*
     * Add the correct display in all browsers.
     */summary
{
    display: list-item;
}/*
     * Add the correct display in IE 9-.
     */menu
{
    display: block;
}/* Scripting
       ========================================================================== *//**
     * Add the correct display in IE 9-.
     */canvas
{
    display: inline-block;
}/**
     * Add the correct display in IE.
     */template
{
    display: none;
}/* Hidden
       ========================================================================== *//**
     * Add the correct display in IE 10-.
     */[hidden]
{
    display: none;
}

.foundation-mq
{
    font-family: 'small=0em&medium=48em&large=64em&xlarge=80em&xxlarge=85.375em';
}

html
{
    font-size: 14px;

    box-sizing: border-box;
}

*,
*::before,
*::after
{
    box-sizing: inherit;
}

body
{
    font-family: 'Open Sans', sans-serif;
    font-weight: normal;
    line-height: 1.5;

    margin: 0;
    padding: 0;

    color: #000;
    background: #fff;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

img
{
    display: inline-block;

    max-width: 100%;
    height: auto;

    vertical-align: middle;

    -ms-interpolation-mode: bicubic;
}

textarea
{
    height: auto;
    min-height: 50px;

    border-radius: 0;
}

select
{
    box-sizing: border-box;
    width: 100%;

    border-radius: 0;
}

.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object
{
    max-width: none !important;
}

button
{
    line-height: 1;

    padding: 0;

    border: 0;
    border-radius: 0;
    background: transparent;

    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
}

[data-whatinput='mouse'] button
{
    outline: 0;
}

pre
{
    overflow: auto;
}

.is-visible
{
    display: block !important;
}

.is-hidden
{
    display: none !important;
}

.row
{
    display: -ms-flexbox;
    display: flex;

    max-width: 100rem;
    margin-right: auto;
    margin-left: auto;

    -ms-flex-flow: row wrap;
        flex-flow: row wrap;
}

.row .row
{
    margin-right: -1.42857rem;
    margin-left: -1.42857rem;
}

.row .row.collapse
{
    margin-right: 0;
    margin-left: 0;
}

.row.expanded
{
    max-width: none;
}

.row:not(.expanded) .row
{
    max-width: none;
}

.row.collapse > .column,
.row.collapse > .columns
{
    padding-right: 0;
    padding-left: 0;
}

.row.is-collapse-child,
.row.collapse > .column > .row,
.row.collapse > .columns > .row
{
    margin-right: 0;
    margin-left: 0;
}

.column,
.columns
{
    min-width: initial;
    padding-right: 1.42857rem;
    padding-left: 1.42857rem;

    -ms-flex: 1 1 0;
        flex: 1 1 0;
}

.column.row.row,
.row.row.columns
{
    display: block;
    float: none;
}

.row .column.row.row,
.row .row.row.columns
{
    margin-right: 0;
    margin-left: 0;
    padding-right: 0;
    padding-left: 0;
}

.flex-container
{
    display: -ms-flexbox;
    display: flex;
}

.flex-child-auto
{
    -ms-flex: 1 1 auto;
        flex: 1 1 auto;
}

.flex-child-grow
{
    -ms-flex: 1 0 auto;
        flex: 1 0 auto;
}

.flex-child-shrink
{
    -ms-flex: 0 1 auto;
        flex: 0 1 auto;
}

.flex-dir-row
{
        flex-direction: row;

    -ms-flex-direction: row;
}

.flex-dir-row-reverse
{
        flex-direction: row-reverse;

    -ms-flex-direction: row-reverse;
}

.flex-dir-column
{
        flex-direction: column;

    -ms-flex-direction: column;
}

.flex-dir-column-reverse
{
        flex-direction: column-reverse;

    -ms-flex-direction: column-reverse;
}

.small-1
{
    max-width: 8.33333%;

    -ms-flex: 0 0 8.33333%;
        flex: 0 0 8.33333%;
}

.small-offset-0
{
    margin-left: 0;
}

.small-2
{
    max-width: 16.66667%;

    -ms-flex: 0 0 16.66667%;
        flex: 0 0 16.66667%;
}

.small-offset-1
{
    margin-left: 8.33333%;
}

.small-3
{
    max-width: 25%;

    -ms-flex: 0 0 25%;
        flex: 0 0 25%;
}

.small-offset-2
{
    margin-left: 16.66667%;
}

.small-4
{
    max-width: 33.33333%;

    -ms-flex: 0 0 33.33333%;
        flex: 0 0 33.33333%;
}

.small-offset-3
{
    margin-left: 25%;
}

.small-5
{
    max-width: 41.66667%;

    -ms-flex: 0 0 41.66667%;
        flex: 0 0 41.66667%;
}

.small-offset-4
{
    margin-left: 33.33333%;
}

.small-6
{
    max-width: 50%;

    -ms-flex: 0 0 50%;
        flex: 0 0 50%;
}

.small-offset-5
{
    margin-left: 41.66667%;
}

.small-7
{
    max-width: 58.33333%;

    -ms-flex: 0 0 58.33333%;
        flex: 0 0 58.33333%;
}

.small-offset-6
{
    margin-left: 50%;
}

.small-8
{
    max-width: 66.66667%;

    -ms-flex: 0 0 66.66667%;
        flex: 0 0 66.66667%;
}

.small-offset-7
{
    margin-left: 58.33333%;
}

.small-9
{
    max-width: 75%;

    -ms-flex: 0 0 75%;
        flex: 0 0 75%;
}

.small-offset-8
{
    margin-left: 66.66667%;
}

.small-10
{
    max-width: 83.33333%;

    -ms-flex: 0 0 83.33333%;
        flex: 0 0 83.33333%;
}

.small-offset-9
{
    margin-left: 75%;
}

.small-11
{
    max-width: 91.66667%;

    -ms-flex: 0 0 91.66667%;
        flex: 0 0 91.66667%;
}

.small-offset-10
{
    margin-left: 83.33333%;
}

.small-12
{
    max-width: 100%;

    -ms-flex: 0 0 100%;
        flex: 0 0 100%;
}

.small-offset-11
{
    margin-left: 91.66667%;
}

.small-order-1
{
    -ms-flex-order: 1;
    order: 1;
}

.small-order-2
{
    -ms-flex-order: 2;
    order: 2;
}

.small-order-3
{
    -ms-flex-order: 3;
    order: 3;
}

.small-order-4
{
    -ms-flex-order: 4;
    order: 4;
}

.small-order-5
{
    -ms-flex-order: 5;
    order: 5;
}

.small-order-6
{
    -ms-flex-order: 6;
    order: 6;
}

.small-up-1
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-1 > .column,
.small-up-1 > .columns
{
    max-width: 100%;

    -ms-flex: 0 0 100%;
        flex: 0 0 100%;
}

.small-up-2
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-2 > .column,
.small-up-2 > .columns
{
    max-width: 50%;

    -ms-flex: 0 0 50%;
        flex: 0 0 50%;
}

.small-up-3
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-3 > .column,
.small-up-3 > .columns
{
    max-width: 33.33333%;

    -ms-flex: 0 0 33.33333%;
        flex: 0 0 33.33333%;
}

.small-up-4
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-4 > .column,
.small-up-4 > .columns
{
    max-width: 25%;

    -ms-flex: 0 0 25%;
        flex: 0 0 25%;
}

.small-up-5
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-5 > .column,
.small-up-5 > .columns
{
    max-width: 20%;

    -ms-flex: 0 0 20%;
        flex: 0 0 20%;
}

.small-up-6
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-6 > .column,
.small-up-6 > .columns
{
    max-width: 16.66667%;

    -ms-flex: 0 0 16.66667%;
        flex: 0 0 16.66667%;
}

.small-up-7
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-7 > .column,
.small-up-7 > .columns
{
    max-width: 14.28571%;

    -ms-flex: 0 0 14.28571%;
        flex: 0 0 14.28571%;
}

.small-up-8
{
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.small-up-8 > .column,
.small-up-8 > .columns
{
    max-width: 12.5%;

    -ms-flex: 0 0 12.5%;
        flex: 0 0 12.5%;
}

.small-collapse > .column,
.small-collapse > .columns
{
    padding-right: 0;
    padding-left: 0;
}

.small-uncollapse > .column,
.small-uncollapse > .columns
{
    padding-right: 1.42857rem;
    padding-left: 1.42857rem;
}

.row.medium-unstack > .column,
.row.medium-unstack > .columns
{
    -ms-flex: 0 0 100%;
        flex: 0 0 100%;
}

.row.large-unstack > .column,
.row.large-unstack > .columns
{
    -ms-flex: 0 0 100%;
        flex: 0 0 100%;
}

.row.xlarge-unstack > .column,
.row.xlarge-unstack > .columns
{
    -ms-flex: 0 0 100%;
        flex: 0 0 100%;
}

.row.xxlarge-unstack > .column,
.row.xxlarge-unstack > .columns
{
    -ms-flex: 0 0 100%;
        flex: 0 0 100%;
}

.shrink
{
    max-width: 100%;

    -ms-flex: 0 0 auto;
        flex: 0 0 auto;
}

.column-block
{
    margin-bottom: 2.85714rem;
}

.column-block > :last-child
{
    margin-bottom: 0;
}

div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
p,
blockquote,
th,
td
{
    margin: 0;
    padding: 0;
}

p
{
    font-size: inherit;
    line-height: 1.6;

    margin-bottom: 1rem;

    text-rendering: optimizeLegibility;
}

em,
i
{
    font-style: italic;
    line-height: inherit;
}

strong,
b
{
    font-weight: bold;
    line-height: inherit;
}

small
{
    font-size: 80%;
    line-height: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6
{
    font-family: 'Open Sans', sans-serif;
    font-weight: normal;
    font-style: normal;

    color: inherit;

    text-rendering: optimizeLegibility;
}

h1 small,
h2 small,
h3 small,
h4 small,
h5 small,
h6 small
{
    line-height: 0;

    color: #cacaca;
}

h1
{
    font-size: 2.14286rem;
    line-height: 1.4;

    margin-top: 0;
    margin-bottom: .5rem;
}

h2
{
    font-size: 2.14286rem;
    line-height: 1.4;

    margin-top: 0;
    margin-bottom: .5rem;
}

h3
{
    font-size: 1.71429rem;
    line-height: 1.4;

    margin-top: 0;
    margin-bottom: .5rem;
}

h4
{
    font-size: 1.28571rem;
    line-height: 1.4;

    margin-top: 0;
    margin-bottom: .5rem;
}

h5
{
    font-size: 1.14286rem;
    line-height: 1.4;

    margin-top: 0;
    margin-bottom: .5rem;
}

h6
{
    font-size: 1rem;
    line-height: 1.4;

    margin-top: 0;
    margin-bottom: .5rem;
}

a
{
    line-height: inherit;

    cursor: pointer;
    text-decoration: none;

    color: #1779ba;
}

a:hover,
a:focus
{
    color: #1468a0;
}

a img
{
    border: 0;
}

hr
{
    clear: both;

    max-width: 100rem;
    height: 0;
    margin: 1.42857rem auto;

    border-top: 0;
    border-right: 0;
    border-bottom: 1px solid #cacaca;
    border-left: 0;
}

ul,
ol,
dl
{
    line-height: 1.6;

    margin-bottom: 1rem;

    list-style-position: outside;
}

li
{
    font-size: inherit;
}

ul
{
    margin-left: 1.25rem;

    list-style-type: disc;
}

ol
{
    margin-left: 1.25rem;
}

ul ul,
ol ul,
ul ol,
ol ol
{
    margin-bottom: 0;
    margin-left: 1.25rem;
}

dl
{
    margin-bottom: 1rem;
}

dl dt
{
    font-weight: bold;

    margin-bottom: .3rem;
}

blockquote
{
    margin: 0 0 1rem;
    padding: .64286rem 1.42857rem 0 1.35714rem;

    border-left: 1px solid #cacaca;
}

blockquote,
blockquote p
{
    line-height: 1.6;

    color: #8a8a8a;
}

cite
{
    font-size: .92857rem;

    display: block;

    color: #8a8a8a;
}

cite:before
{
    content: '— ';
}

abbr
{
    cursor: help;

    color: #000;
    border-bottom: 1px dotted #000;
}

figure
{
    margin: 0;
}

code
{
    font-family: Consolas, 'Liberation Mono', Courier, monospace;
    font-weight: normal;

    padding: .14286rem .35714rem .07143rem;

    color: #000;
    border: 1px solid #cacaca;
    background-color: #dee3e7;
}

kbd
{
    font-family: Consolas, 'Liberation Mono', Courier, monospace;

    margin: 0;
    padding: .14286rem .28571rem 0;

    color: #000;
    background-color: #dee3e7;
}

.subheader
{
    font-weight: normal;
    line-height: 1.4;

    margin-top: .2rem;
    margin-bottom: .5rem;

    color: #8a8a8a;
}

.lead
{
    font-size: 17.5px;
    line-height: 1.6;
}

.stat
{
    font-size: 2.5rem;
    line-height: 1;
}

p + .stat
{
    margin-top: -1rem;
}

.no-bullet
{
    margin-left: 0;

    list-style: none;
}

.text-left
{
    text-align: left;
}

.text-right
{
    text-align: right;
}

.text-center
{
    text-align: center;
}

.text-justify
{
    text-align: justify;
}

.show-for-print
{
    display: none !important;
}

.align-right
{
    -ms-flex-pack: end;
    justify-content: flex-end;
}

.align-center
{
    -ms-flex-pack: center;
    justify-content: center;
}

.align-justify
{
    -ms-flex-pack: justify;
    justify-content: space-between;
}

.align-spaced
{
    -ms-flex-pack: distribute;
    justify-content: space-around;
}

.align-top
{
    -ms-flex-align: start;
    align-items: flex-start;
}

.align-self-top
{
    -ms-flex-item-align: start;
    align-self: flex-start;
}

.align-bottom
{
    -ms-flex-align: end;
    align-items: flex-end;
}

.align-self-bottom
{
    -ms-flex-item-align: end;
    align-self: flex-end;
}

.align-middle
{
    -ms-flex-align: center;
    align-items: center;
}

.align-self-middle
{
    -ms-flex-item-align: center;
    -ms-grid-row-align: center;
    align-self: center;
}

.align-stretch
{
    -ms-flex-align: stretch;
    align-items: stretch;
}

.align-self-stretch
{
    -ms-flex-item-align: stretch;
    -ms-grid-row-align: stretch;
    align-self: stretch;
}

.small-order-1
{
    -ms-flex-order: 1;
    order: 1;
}

.small-order-2
{
    -ms-flex-order: 2;
    order: 2;
}

.small-order-3
{
    -ms-flex-order: 3;
    order: 3;
}

.small-order-4
{
    -ms-flex-order: 4;
    order: 4;
}

.small-order-5
{
    -ms-flex-order: 5;
    order: 5;
}

.small-order-6
{
    -ms-flex-order: 6;
    order: 6;
}

[class^='icon-']:before,
[class*=' icon-']:before
{
    font-family: 'fontello';
    font-weight: normal;
    font-style: normal;
    /* opacity: .8; */ /* For safety - reset parent styles, that can break glyph codes*/
    font-variant: normal;
    /* fix buttons height, for twitter bootstrap */
    line-height: 1em;

    display: inline-block;

    width: 1em;
    margin-right: .2em;
    /* Animation center compensation - margins should be symmetric */ /* remove if not needed */
    margin-left: .2em;

    text-align: center;
    text-decoration: inherit;
    text-transform: none;

    speak: none;
    /* you can be more comfortable with increased icons size */ /* font-size: 120%; */ /* Font smoothing. That was taken from TWBS */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    /* Uncomment for 3D effect */ /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */;
}

.icon-mail:before
{
    content: '\e800';
}/* '' */.icon-twitter:before
{
    content: '\f099';
}/* '' */.icon-facebook:before
{
    content: '\f09a';
}/* '' *//* Slider */.slick-slider
{
    position: relative;

    display: block;

    box-sizing: border-box;

    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;

    -webkit-touch-callout: none;
    -ms-touch-action: pan-y;
        touch-action: pan-y;
    -webkit-tap-highlight-color: transparent;
}

.slick-list
{
    position: relative;

    display: block;
    overflow: hidden;

    margin: 0;
    padding: 0;
}

.slick-list:focus
{
    outline: none;
}

.slick-list.dragging
{
    cursor: pointer;
    cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list
{
    transform: translate3d(0, 0, 0);
}

.slick-track
{
    position: relative;
    top: 0;
    left: 0;

    display: block;
}

.slick-track:before,
.slick-track:after
{
    display: table;

    content: '';
}

.slick-track:after
{
    clear: both;
}

.slick-loading .slick-track
{
    visibility: hidden;
}

.slick-slide
{
    display: none;
    float: left;

    height: 100%;
    min-height: 1px;
}

[dir='rtl'] .slick-slide
{
    float: right;
}

.slick-slide img
{
    display: block;
}

.slick-slide.slick-loading img
{
    display: none;
}

.slick-slide.dragging img
{
    pointer-events: none;
}

.slick-initialized .slick-slide
{
    display: block;
}

.slick-loading .slick-slide
{
    visibility: hidden;
}

.slick-vertical .slick-slide
{
    display: block;

    height: auto;

    border: 1px solid transparent;
}

.slick-arrow.slick-hidden
{
    display: none;
}/* Slider *//* Icons *//* Arrows */.slick-prev,
.slick-next
{
    font-size: 0;
    line-height: 0;

    position: absolute;
    top: 50%;

    display: block;

    width: 20px;
    height: 20px;
    padding: 0;

    cursor: pointer;
    transform: translate(0, -50%);

    color: transparent;
    border: none;
    outline: none;
    background: transparent;
}

.slick-prev:hover,
.slick-prev:focus,
.slick-next:hover,
.slick-next:focus
{
    color: transparent;
    outline: none;
    background: transparent;
}

.slick-prev:hover:before,
.slick-prev:focus:before,
.slick-next:hover:before,
.slick-next:focus:before
{
    opacity: 1;
}

.slick-prev.slick-disabled:before,
.slick-next.slick-disabled:before
{
    opacity: .25;
}

.slick-prev:before,
.slick-next:before
{
    font-family: 'slick';
    font-size: 20px;
    line-height: 1;

    opacity: .75;
    color: white;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.slick-prev
{
    left: -25px;
}

[dir='rtl'] .slick-prev
{
    right: -25px;
    left: auto;
}

.slick-prev:before
{
    content: '←';
}

[dir='rtl'] .slick-prev:before
{
    content: '→';
}

.slick-next
{
    right: -25px;
}

[dir='rtl'] .slick-next
{
    right: auto;
    left: -25px;
}

.slick-next:before
{
    content: '→';
}

[dir='rtl'] .slick-next:before
{
    content: '←';
}/* Dots */.slick-dotted.slick-slider
{
    margin-bottom: 30px;
}

.slick-dots
{
    position: absolute;
    bottom: -25px;

    display: block;

    width: 100%;
    margin: 0;
    padding: 0;

    list-style: none;

    text-align: center;
}

.slick-dots li
{
    position: relative;

    display: inline-block;

    width: 20px;
    height: 20px;
    margin: 0 5px;
    padding: 0;

    cursor: pointer;
}

.slick-dots li button
{
    font-size: 0;
    line-height: 0;

    display: block;

    width: 20px;
    height: 20px;
    padding: 5px;

    cursor: pointer;

    color: transparent;
    border: 0;
    outline: none;
    background: transparent;
}

.slick-dots li button:hover,
.slick-dots li button:focus
{
    outline: none;
}

.slick-dots li button:hover:before,
.slick-dots li button:focus:before
{
    opacity: 1;
}

.slick-dots li button:before
{
    font-family: 'slick';
    font-size: 6px;
    line-height: 20px;

    position: absolute;
    top: 0;
    left: 0;

    width: 20px;
    height: 20px;

    content: '•';
    text-align: center;

    opacity: .25;
    color: black;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.slick-dots li.slick-active button:before
{
    opacity: .75;
    color: black;
}

.lg-icon
{
    font-family: 'lg';
    font-weight: normal;
    font-style: normal;
    font-variant: normal;
    line-height: 1;

    text-transform: none;

    speak: none;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.lg-actions .lg-next,
.lg-actions .lg-prev
{
    font-size: 22px;

    position: absolute;
    z-index: 1080;
    top: 50%;

    display: block;

    margin-top: -10px;
    padding: 8px 10px 9px;

    cursor: pointer;

    color: #999;
    border-radius: 2px;
    background-color: rgba(0, 0, 0, .45);
}

.lg-actions .lg-next.disabled,
.lg-actions .lg-prev.disabled
{
    pointer-events: none;

    opacity: .5;
}

.lg-actions .lg-next:hover,
.lg-actions .lg-prev:hover
{
    color: #fff;
}

.lg-actions .lg-next
{
    right: 20px;
}

.lg-actions .lg-next:before
{
    content: '\e095';
}

.lg-actions .lg-prev
{
    left: 20px;
}

.lg-actions .lg-prev:after
{
    content: '\e094';
}

.lg-outer.lg-right-end .lg-object
{
    position: relative;

    animation: lg-right-end .3s;
}

.lg-outer.lg-left-end .lg-object
{
    position: relative;

    animation: lg-left-end .3s;
}

.lg-toolbar
{
    position: absolute;
    z-index: 1080;
    top: 0;
    left: 0;

    width: 100%;

    background-color: rgba(0, 0, 0, .45);
}

.lg-toolbar .lg-icon
{
    font-size: 24px;
    line-height: 27px;

    float: right;

    width: 50px;
    height: 47px;
    padding: 10px 0;

    cursor: pointer;
    text-align: center;
    text-decoration: none !important;

    color: #999;
    outline: medium none;
}

.lg-toolbar .lg-icon:hover
{
    color: #fff;
}

.lg-toolbar .lg-close:after
{
    content: '\e070';
}

.lg-toolbar .lg-download:after
{
    content: '\e0f2';
}

.lg-sub-html
{
    font-size: 16px;

    position: fixed;
    z-index: 1080;
    right: 0;
    bottom: 0;
    left: 0;

    padding: 10px 40px;

    text-align: center;

    color: #eee;
    background-color: rgba(0, 0, 0, .45);
}

.lg-sub-html h4
{
    font-size: 13px;
    font-weight: bold;

    margin: 0;
}

.lg-sub-html p
{
    font-size: 12px;

    margin: 5px 0 0;
}

#lg-counter
{
    font-size: 16px;

    display: inline-block;

    padding-top: 12px;
    padding-left: 20px;

    vertical-align: middle;

    color: #999;
}

.lg-toolbar,
.lg-prev,
.lg-next
{
    transition: transform .35s cubic-bezier(0, 0, .25, 1) 0s, opacity .35s cubic-bezier(0, 0, .25, 1) 0s;

    opacity: 1;
}

.lg-hide-items .lg-prev
{
    transform: translate3d(-10px, 0, 0);

    opacity: 0;
}

.lg-hide-items .lg-next
{
    transform: translate3d(10px, 0, 0);

    opacity: 0;
}

.lg-hide-items .lg-toolbar
{
    transform: translate3d(0, -10px, 0);

    opacity: 0;
}

body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-object
{
    transition: transform 250ms ease 0s, opacity 250ms !important;
    transform: scale3d(.5, .5, .5);
    transform-origin: 50% 50%;

    opacity: 0;
}

body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item.lg-complete .lg-object
{
    transform: scale3d(1, 1, 1);

    opacity: 1;
}

.lg-outer .lg-thumb-outer
{
    position: absolute;
    z-index: 1080;
    bottom: 0;

    width: 100%;
    max-height: 350px;

    transition: transform .25s cubic-bezier(0, 0, .25, 1) 0s;
    transform: translate3d(0, 100%, 0);

    background-color: #0d0a0a;
}

.lg-outer .lg-thumb-outer.lg-grab .lg-thumb-item
{
    cursor: -webkit-grab;
    cursor:      -o-grab;
    cursor:     -ms-grab;
    cursor:         grab;
}

.lg-outer .lg-thumb-outer.lg-grabbing .lg-thumb-item
{
    cursor: move;
    cursor: -webkit-grabbing;
    cursor:      -o-grabbing;
    cursor:     -ms-grabbing;
    cursor:         grabbing;
}

.lg-outer .lg-thumb-outer.lg-dragging .lg-thumb
{
    transition-duration: 0s !important;
}

.lg-outer.lg-thumb-open .lg-thumb-outer
{
    transform: translate3d(0, 0%, 0);
}

.lg-outer .lg-thumb
{
    height: 100%;
    margin-bottom: -5px;
    padding: 10px 0;
}

.lg-outer .lg-thumb-item
{
    float: left;
    overflow: hidden;

    height: 100%;
    margin-bottom: 5px;

    cursor: pointer;

    border: 2px solid #fff;
    border-radius: 5px;
    border-radius: 4px;
}

.lg-outer .lg-thumb-item.active,
.lg-outer .lg-thumb-item:hover
{
    border-color: #a90707;
}

.lg-outer .lg-thumb-item img
{
    width: 100%;
    height: 100%;
}

.lg-outer.lg-has-thumb .lg-item
{
    padding-bottom: 120px;
}

.lg-outer.lg-can-toggle .lg-item
{
    padding-bottom: 0;
}

.lg-outer.lg-pull-caption-up .lg-sub-html
{
    transition: bottom .25s ease;
}

.lg-outer.lg-pull-caption-up.lg-thumb-open .lg-sub-html
{
    bottom: 100px;
}

.lg-outer .lg-toogle-thumb
{
    font-size: 24px;
    line-height: 27px;

    position: absolute;
    top: -39px;
    right: 20px;

    width: 50px;
    height: 39px;
    padding: 5px 0;

    cursor: pointer;
    text-align: center;

    color: #999;
    border-radius: 2px 2px 0 0;
    background-color: #0d0a0a;
}

.lg-outer .lg-toogle-thumb:after
{
    content: '\e1ff';
}

.lg-outer .lg-toogle-thumb:hover
{
    color: #fff;
}

.lg-outer .lg-video-cont
{
    display: inline-block;

    width: 100%;
    max-width: 1140px;
    max-height: 100%;
    padding: 0 5px;

    vertical-align: middle;
}

.lg-outer .lg-video
{
    position: relative;

    overflow: hidden;

    width: 100%;
    height: 0;
    padding-bottom: 56.25%;
}

.lg-outer .lg-video .lg-object
{
    position: absolute;
    top: 0;
    left: 0;

    display: inline-block;

    width: 100% !important;
    height: 100% !important;
}

.lg-outer .lg-video .lg-video-play
{
    position: absolute;
    z-index: 1080;
    top: 50%;
    left: 50%;

    width: 84px;
    height: 59px;
    margin-top: -30px;
    margin-left: -42px;

    cursor: pointer;
}

.lg-outer .lg-has-vimeo .lg-video-play
{
    background: url('../img/vimeo-play.png') no-repeat scroll 0 0 transparent;
}

.lg-outer .lg-has-vimeo:hover .lg-video-play
{
    background: url('../img/vimeo-play.png') no-repeat scroll 0 -58px transparent;
}

.lg-outer .lg-has-html5 .lg-video-play
{
    width: 64px;
    height: 64px;
    margin-top: -32px;
    margin-left: -32px;

    opacity: .8;
    background: transparent url('../img/video-play.png') no-repeat scroll 0 0;
}

.lg-outer .lg-has-html5:hover .lg-video-play
{
    opacity: 1;
}

.lg-outer .lg-has-youtube .lg-video-play
{
    background: url('../img/youtube-play.png') no-repeat scroll 0 0 transparent;
}

.lg-outer .lg-has-youtube:hover .lg-video-play
{
    background: url('../img/youtube-play.png') no-repeat scroll 0 -60px transparent;
}

.lg-outer .lg-video-object
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100% !important;
    height: 100% !important;
}

.lg-outer .lg-has-video .lg-video-object
{
    visibility: hidden;
}

.lg-outer .lg-has-video.lg-video-palying .lg-object,
.lg-outer .lg-has-video.lg-video-palying .lg-video-play
{
    display: none;
}

.lg-outer .lg-has-video.lg-video-palying .lg-video-object
{
    visibility: visible;
}

.lg-progress-bar
{
    position: absolute;
    z-index: 1080;
    top: 0;
    left: 0;

    width: 100%;
    height: 5px;

    transition: opacity .08s ease 0s;

    opacity: 0;
    background-color: #333;
}

.lg-progress-bar .lg-progress
{
    width: 0;
    height: 5px;

    background-color: #a90707;
}

.lg-progress-bar.lg-start .lg-progress
{
    width: 100%;
}

.lg-show-autoplay .lg-progress-bar
{
    opacity: 1;
}

.lg-autoplay-button:after
{
    content: '\e01d';
}

.lg-show-autoplay .lg-autoplay-button:after
{
    content: '\e01a';
}

.lg-outer.lg-css3.lg-zoom-dragging .lg-item.lg-complete.lg-zoomable .lg-img-wrap,
.lg-outer.lg-css3.lg-zoom-dragging .lg-item.lg-complete.lg-zoomable .lg-image
{
    transition-duration: 0s;
}

.lg-outer .lg-item.lg-complete.lg-zoomable .lg-img-wrap
{
    transition: transform .3s ease 0s;
    transform: translate3d(0, 0, 0);

    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
}

.lg-outer .lg-item.lg-complete.lg-zoomable .lg-image
{
    transition: transform .3s ease 0s, opacity .15s !important;
    transform: scale3d(1, 1, 1);
    transform-origin: 0 0;

    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
}

#lg-zoom-in:after
{
    content: '\e311';
}

#lg-zoom-out
{
    pointer-events: none;

    opacity: .5;
}

#lg-zoom-out:after
{
    content: '\e312';
}

.lg-zoomed #lg-zoom-out
{
    pointer-events: auto;

    opacity: 1;
}

.lg-outer .lg-pager-outer
{
    position: absolute;
    z-index: 1080;
    right: 0;
    bottom: 60px;
    left: 0;

    height: 10px;

    text-align: center;
}

.lg-outer .lg-pager-outer.lg-pager-hover .lg-pager-cont
{
    overflow: visible;
}

.lg-outer .lg-pager-cont
{
    position: relative;

    display: inline-block;
    overflow: hidden;

    margin: 0 5px;

    cursor: pointer;
    vertical-align: top;
}

.lg-outer .lg-pager-cont:hover .lg-pager-thumb-cont
{
    transform: translate3d(0, 0, 0);

    opacity: 1;
}

.lg-outer .lg-pager-cont.lg-pager-active .lg-pager
{
    box-shadow: 0 0 0 2px white inset;
}

.lg-outer .lg-pager-thumb-cont
{
    position: absolute;
    bottom: 100%;
    left: 0;

    width: 120px;
    height: 83px;
    margin-bottom: 20px;
    margin-left: -60px;
    padding: 5px;

    transition: opacity .15s ease 0s, transform .15s ease 0s;
    transform: translate3d(0, 5px, 0);

    opacity: 0;
    color: #fff;
    border-radius: 3px;
    background-color: #fff;
}

.lg-outer .lg-pager-thumb-cont img
{
    width: 100%;
    height: 100%;
}

.lg-outer .lg-pager
{
    display: block;

    width: 12px;
    height: 12px;

    transition: box-shadow .3s ease 0s;

    border-radius: 50%;
    background-color: rgba(255, 255, 255, .5);
    box-shadow: 0 0 0 8px rgba(255, 255, 255, .7) inset;
}

.lg-outer .lg-pager:hover,
.lg-outer .lg-pager:focus
{
    box-shadow: 0 0 0 8px white inset;
}

.lg-outer .lg-caret
{
    position: absolute;
    bottom: -10px;
    left: 50%;

    display: inline-block;

    width: 0;
    height: 0;
    margin-left: -5px;

    vertical-align: middle;

    border-top: 10px dashed;
    border-right: 10px solid transparent;
    border-left: 10px solid transparent;
}

.lg-fullscreen:after
{
    content: '\e20c';
}

.lg-fullscreen-on .lg-fullscreen:after
{
    content: '\e20d';
}

.group
{
    *zoom: 1;
}

.group:before,
.group:after
{
    line-height: 0;

    display: table;

    content: '';
}

.group:after
{
    clear: both;
}

.lg-outer
{
    position: fixed;
    z-index: 1050;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    transition: opacity .15s ease 0s;

    opacity: 0;
}

.lg-outer *
{
    box-sizing: border-box;
}

.lg-outer.lg-visible
{
    opacity: 1;
}

.lg-outer.lg-css3 .lg-item.lg-prev-slide,
.lg-outer.lg-css3 .lg-item.lg-next-slide,
.lg-outer.lg-css3 .lg-item.lg-current
{
    transition-timing-function: inherit !important;
    transition-duration: inherit !important;
}

.lg-outer.lg-css3.lg-dragging .lg-item.lg-prev-slide,
.lg-outer.lg-css3.lg-dragging .lg-item.lg-next-slide,
.lg-outer.lg-css3.lg-dragging .lg-item.lg-current
{
    transition-duration: 0s !important;

    opacity: 1;
}

.lg-outer.lg-grab img.lg-object
{
    cursor: -webkit-grab;
    cursor:      -o-grab;
    cursor:     -ms-grab;
    cursor:         grab;
}

.lg-outer.lg-grabbing img.lg-object
{
    cursor: move;
    cursor: -webkit-grabbing;
    cursor:      -o-grabbing;
    cursor:     -ms-grabbing;
    cursor:         grabbing;
}

.lg-outer .lg
{
    position: relative;

    overflow: hidden;

    width: 100%;
    max-width: 100%;
    height: 100%;
    max-height: 100%;
    margin-right: auto;
    margin-left: auto;
}

.lg-outer .lg-inner
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    white-space: nowrap;
}

.lg-outer .lg-item
{
    display: none !important;
}

.lg-outer.lg-css3 .lg-prev-slide,
.lg-outer.lg-css3 .lg-current,
.lg-outer.lg-css3 .lg-next-slide
{
    display: inline-block !important;
}

.lg-outer.lg-css .lg-current
{
    display: inline-block !important;
}

.lg-outer .lg-item,
.lg-outer .lg-img-wrap
{
    position: absolute;

    display: inline-block;

    width: 100%;
    height: 100%;

    text-align: center;
}

.lg-outer .lg-item:before,
.lg-outer .lg-img-wrap:before
{
    display: inline-block;

    width: 1px;
    height: 50%;
    margin-right: -1px;

    content: '';
}

.lg-outer .lg-img-wrap
{
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    padding: 0 5px;
}

.lg-outer .lg-item.lg-complete
{
    background-image: none;
}

.lg-outer .lg-item.lg-current
{
    z-index: 1060;
}

.lg-outer .lg-image
{
    display: inline-block;

    width: auto !important;
    max-width: 100%;
    height: auto !important;
    max-height: 100%;

    vertical-align: middle;
}

.lg-outer.lg-show-after-load .lg-item .lg-object,
.lg-outer.lg-show-after-load .lg-item .lg-video-play
{
    transition: opacity .15s ease 0s;

    opacity: 0;
}

.lg-outer.lg-show-after-load .lg-item.lg-complete .lg-object,
.lg-outer.lg-show-after-load .lg-item.lg-complete .lg-video-play
{
    opacity: 1;
}

.lg-outer .lg-empty-html
{
    display: none;
}

.lg-outer.lg-hide-download #lg-download
{
    display: none;
}

.lg-backdrop
{
    position: fixed;
    z-index: 1040;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    transition: opacity .15s ease 0s;

    opacity: 0;
    background-color: #000;
}

.lg-backdrop.in
{
    opacity: 1;
}

.lg-css3.lg-no-trans .lg-prev-slide,
.lg-css3.lg-no-trans .lg-next-slide,
.lg-css3.lg-no-trans .lg-current
{
    transition: none 0s ease 0s !important;
}

.lg-css3.lg-use-css3 .lg-item
{
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
}

.lg-css3.lg-use-left .lg-item
{
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
}

.lg-css3.lg-fade .lg-item
{
    opacity: 0;
}

.lg-css3.lg-fade .lg-item.lg-current
{
    opacity: 1;
}

.lg-css3.lg-fade .lg-item.lg-prev-slide,
.lg-css3.lg-fade .lg-item.lg-next-slide,
.lg-css3.lg-fade .lg-item.lg-current
{
    transition: opacity .1s ease 0s;
}

.lg-css3.lg-slide.lg-use-css3 .lg-item
{
    opacity: 0;
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide
{
    transform: translate3d(-100%, 0, 0);
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide
{
    transform: translate3d(100%, 0, 0);
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current
{
    transform: translate3d(0, 0, 0);

    opacity: 1;
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide,
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide,
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current
{
    transition: transform 1s cubic-bezier(0, 0, .25, 1) 0s, opacity .1s ease 0s;
}

.lg-css3.lg-slide.lg-use-left .lg-item
{
    position: absolute;
    left: 0;

    opacity: 0;
}

.lg-css3.lg-slide.lg-use-left .lg-item.lg-prev-slide
{
    left: -100%;
}

.lg-css3.lg-slide.lg-use-left .lg-item.lg-next-slide
{
    left: 100%;
}

.lg-css3.lg-slide.lg-use-left .lg-item.lg-current
{
    left: 0;

    opacity: 1;
}

.lg-css3.lg-slide.lg-use-left .lg-item.lg-prev-slide,
.lg-css3.lg-slide.lg-use-left .lg-item.lg-next-slide,
.lg-css3.lg-slide.lg-use-left .lg-item.lg-current
{
    transition: left 1s cubic-bezier(0, 0, .25, 1) 0s, opacity .1s ease 0s;
}

.site-header
{
    position: fixed;
    z-index: 10;
    top: 0;
    left: 50%;

    display: -ms-flexbox;
    display: flex;

    width: 100%;

    transform: translateX(-50%);

    background: #fff;
    box-shadow: 0 20px 40px -10px rgba(0, 0, 0, .1);

    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-align: center;
    align-items: center;
}

.site-header a
{
    text-transform: uppercase;

    color: #000;
}

.site-header .site-logo
{
    position: relative;
    z-index: 1;

    display: -ms-flexbox;
    display: flex;

    min-width: 140px;
    padding: 15px;

    -ms-flex-pack: distribute;
    justify-content: space-around;
}

.site-header .site-logo a
{
    display: block;
}

.site-header .site-nav
{
    position: fixed;
    top: 0;
    left: 0;

    display: -ms-flexbox;
    display: flex;
    visibility: hidden;

    width: 100%;
    height: 100vh;

    transition: all .3s ease;

    opacity: 0;
    background: #fff;

    -ms-flex-positive: 1;
    flex-grow: 1;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: center;
    justify-content: center;
}

.site-header .site-nav.active
{
    visibility: visible;

    opacity: 1;
}

.site-header .site-nav.active ul
{
    animation: fadeIn 1s ease;
}

.site-header .site-nav a
{
    font-size: 18px;
    font-weight: 700;
    line-height: 60px;
}

.site-header .site-nav ul
{
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    -ms-flex-direction: column;
    -ms-flex-pack: center;
    justify-content: center;
    -ms-flex-align: center;
    align-items: center;
}

.site-header .site-tel
{
    position: relative;

    display: -ms-flexbox;
    display: flex;

    min-width: 155px;
    padding: 15px;

    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: center;
    justify-content: center;
}

.site-header .site-tel a
{
    font-weight: 600;
}

.site-nav ul
{
    margin: 0;
    padding: 0;

    list-style-type: none;
}

.menu-button
{
    position: relative;

    display: block;

    width: 30px;
    height: 20px;

    cursor: pointer;

    background: #fff;
}

.menu-button .sandwich
{
    position: absolute;
    z-index: 200;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    width: 30px;
    height: 20px;
    margin: auto;
}

.menu-button .sw-topper
{
    position: relative;
    top: 0;

    width: 30px;
    height: 4px;

    transition: transform .5s, top .2s;

    border: none;
    background: black;
}

.menu-button .sw-bottom
{
    position: relative;
    top: 4px;

    width: 30px;
    height: 4px;

    transition: transform .5s, top .2s;
    transition-delay: .2s, 0s;

    border: none;
    background: black;
}

.menu-button .sw-footer
{
    position: relative;
    top: 8px;

    width: 30px;
    height: 4px;

    transition: all .5s;
    transition-delay: .1s;

    border: none;
    background: black;
}

.menu-button.active .sw-topper
{
    top: 5px;

    transform: rotate(-45deg);
}

.menu-button.active .sw-bottom
{
    top: 1px;

    transform: rotate(45deg);
}

.menu-button.active .sw-footer
{
    top: 0;

    transform: rotate(180deg);

    opacity: 0;
}

.site-footer-bottom
{
    padding: 35px 0;

    border-top: 1px solid #c6cdd3;
}

.site-footer-bottom p
{
    font-size: 12px;
    line-height: 18px;

    margin: 0;
}

.site-footer_inner
{
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    padding-top: 60px;

    -ms-flex-pack: center;
    justify-content: center;
    -ms-flex-direction: column;
}

.footer-link
{
    display: -ms-flexbox;
    display: flex;

    margin-bottom: 40px;

    -ms-flex-align: center;
    align-items: center;
}

.footer-link .link-image
{
    min-width: 140px;
    margin-right: 20px;
}

.footer-link .link-text
{
    font-size: 12px;
    line-height: 16px;

    max-width: 150px;

    text-decoration: underline;

    color: #687684;
}

.footer-link .link-text:hover
{
    text-decoration: none;
}/*--------------------------------------------------------------
# Alignments wp
--------------------------------------------------------------*/.alignleft
{
    display: inline;
    float: left;

    margin-right: 1.5em;
}

.alignright
{
    display: inline;
    float: right;

    margin-left: 1.5em;
}

.aligncenter
{
    display: block;
    clear: both;

    margin-right: auto;
    margin-left: auto;
}

*
{
    outline: none !important;
}

body
{
    background: #dee3e7;
}

.wrapper
{
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    min-height: 100vh;

    -ms-flex-direction: column;
}

.site-main
{
    -ms-flex-positive: 1;
    flex-grow: 1;
}

.content-width
{
    width: 100%;
    max-width: 1560px;
    margin-right: auto;
    margin-left: auto;
}

.site-sharing ul
{
    margin: 0;
    padding: 0;

    list-style-type: none;
}

.site-sharing ul a,
.site-sharing ul span
{
    font-size: 24px;

    cursor: pointer;
    text-decoration: none;

    color: #c6cdd3;
}

.has-background
{
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
}

.section-title
{
    margin-bottom: 55px;
    padding-top: 50px;
    padding-bottom: 25px;

    border-bottom: 1px solid #c6cdd3;
}

.section-title.no-border
{
    margin-bottom: 0;
    padding-bottom: 50px;

    border-bottom: none;
}

.section
{
    padding-bottom: 70px;
}

.section-white
{
    background: #fff;
    box-shadow: 0 20px 40px -10px rgba(0, 0, 0, .1);
}

.section-dark *
{
    color: #fff;
}

.bold
{
    font-weight: 700;
}

.form-title
{
    font-size: 24px;
    font-weight: 900;
    line-height: 30px;

    margin-bottom: 14px;
}

.form-descr
{
    font-size: 14px;
    line-height: 18px;

    margin-bottom: 40px;
}

.form-wrapper .title
{
    margin-bottom: 30px;
}

.form-wrapper .title h3
{
    font-weight: 700;
    line-height: 30px;

    margin: 0;
}

.form-wrapper fieldset
{
    margin: 0;
    padding: 0;

    border: none;
}

.form-wrapper .input-row
{
    position: relative;
}

.form-wrapper .input-row.required:before
{
    position: absolute;
    top: 7px;
    right: 7px;

    content: '*';

    color: #c6cdd3;
}

.form-wrapper .input-row input,
.form-wrapper .input-row textarea
{
    font-size: 18px;

    width: 100%;
    margin-bottom: 25px;
    padding-top: 5px;
    padding-bottom: 5px;

    border: none;
    border-bottom: 1px solid #c6cdd3;
}

.form-wrapper .input-row input.error,
.form-wrapper .input-row textarea.error
{
    color: #f4ba00;
    border-bottom: 1px solid #f4ba00;
    box-shadow: 0 1px 0 0 #f4ba00;
}

.form-wrapper .input-row input.error ::-webkit-input-placeholder,
.form-wrapper .input-row textarea.error ::-webkit-input-placeholder
{
    color: #f4ba00;
}

.form-wrapper .input-row input.error :-moz-placeholder,
.form-wrapper .input-row textarea.error :-moz-placeholder
{
    color: #f4ba00;
}

.form-wrapper .input-row input.error ::-moz-placeholder,
.form-wrapper .input-row textarea.error ::-moz-placeholder
{
    color: #f4ba00;
}

.form-wrapper .input-row input.error :-ms-input-placeholder,
.form-wrapper .input-row textarea.error :-ms-input-placeholder
{
    color: #f4ba00;
}

.form-wrapper .input-row input + label.error,
.form-wrapper .input-row textarea + label.error
{
    font-size: 14px;
    line-height: 18px;

    position: absolute;
    bottom: 5px;

    display: block;

    color: #f4ba00;
}

.form-wrapper .input-row textarea
{
    min-height: 180px;

    resize: none;
}

.btn,
.content__data a.btn
{
    font-size: 14px;
    font-weight: 900;
    line-height: 1;

    display: inline-block;

    padding: 18px 17px;

    cursor: pointer;
    transition: all .3s ease;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;

    color: #687684;
    border: 2px solid #687684;
    border-radius: 4px;
    outline: none;
    background-color: #fff;
    box-shadow: 0 7px 20px rgba(0, 0, 0, .1);
}

.btn:hover,
.content__data a.btn:hover
{
    transition: all .3s ease;
    text-decoration: none;

    color: #fff;
    background-color: #687684;
    box-shadow: 0 7px 20px rgba(0, 0, 0, .2);
}

.link-to
{
    font-size: 14px;
    font-weight: 900;
    line-height: 28px;

    transition: border-bottom .3s ease;
    text-decoration: none;
    letter-spacing: .6px;

    color: #000;
    border-bottom: 1px solid rgba(0, 0, 0, .2);
}

.btn.btn--inverse
{
    background-color: #f4ba00;
}

.btn.btn--inverse:hover
{
    background-color: #687684;
}

.link-to:hover
{
    transition: border-bottom .3s ease;

    border-bottom-color: #000;
}

.btn.btn--brd
{
    color: #000;
    border: 2px solid #f4ba00;
    background-color: #fff;
}

.btn.btn--brd:hover
{
    color: #fff;
    background-color: #f4ba00;
}

.intro-section
{
    position: relative;

    padding-top: 45px;
}

.intro-section .feed__list span,
.intro-section .feed__list a
{
    font-size: 20px;
}

.intro-section .site-sharing
{
    margin-bottom: 30px;
}

.intro-section .site-sharing ul
{
    display: -ms-flexbox;
    display: flex;

    -ms-flex-pack: center;
    justify-content: center;
}

.intro-section .intro-title
{
    margin-bottom: 45px;
    padding-bottom: 30px;

    text-align: center;

    border-bottom: 1px solid #c6cdd3;
}

.intro-section .intro-title h1
{
    line-height: 36px;
}

.intro-section .intro-text
{
    margin-right: auto;
    margin-bottom: 65px;
    margin-left: auto;

    text-align: center;
}

.intro-section .intro-text p
{
    font-size: 16px;
    line-height: 24px;
}

.intro-section .intro-bottom
{
    margin-bottom: 70px;

    text-align: center;
}

.intro-section.has-background
{
    z-index: 1;
}

.intro-section.has-background .feed__list
{
    opacity: .5;
}

.intro-section.has-background .intro-title
{
    border-bottom: 1px solid rgba(222, 227, 231, .2);
}

.intro-section.has-background:before
{
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: rgba(0, 0, 0, .66);
}

.intro-section.has-background .feed__list
{
    opacity: .5;
}

.intro-section.has-background *:not(.btn)
{
    color: #fff;
}

.grid-item
{
    position: relative;

    margin-bottom: 30px;
}

.grid-item .b-image
{
    margin-bottom: 30px;
}

.grid-item .b-image img
{
    width: 100%;
}

.grid-item h3
{
    font-weight: 700;

    margin-bottom: 30px;
}

.grid-item p
{
    font-size: 14px;
    line-height: 24px;

    margin: 0;
}

.grid-item.marked
{
    padding-left: 85px;
}

.grid-item.marked:before
{
    position: absolute;
    top: 16px;
    left: 0;

    width: 60px;
    height: 4px;

    content: '';

    background: #f4ba00;
}

.grid-item.col-2
{
    display: -ms-flexbox;
    display: flex;
        flex-direction: column;

    margin-bottom: 40px;

    -ms-flex-direction: column;
}

.grid-item.col-2 .grid-item--right
{
    position: relative;

    padding-bottom: 30px;

    border-bottom: 1px solid #c6cdd3;
}

.numeric-grid
{
    counter-reset: counter;
}

.numeric-grid .numeric-grid-item
{
    margin-bottom: 50px;

    counter-increment: counter;
}

.numeric-grid .numeric-grid-item .grid-item
{
    height: 100%;
}

.numeric-grid .numeric-grid-item .grid-item:after
{
    position: absolute;
    bottom: 0;

    width: 100%;
    height: 1px;

    content: '';

    background: #c6cdd3;
}

.numeric-grid .numeric-grid-item .grid-item:before
{
    font-size: 48px;
    font-weight: 700;

    position: absolute;
    z-index: 1;
    right: 0;
    bottom: 0;

    padding: 0 15px;

    content: counter(counter);
    transform: translateY(50%);

    color: #c6cdd3;
    background: #dee3e7;
}

.section-results
{
    position: relative;
    z-index: 1;

    background-attachment: fixed;
}

.section-results:before
{
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: rgba(104, 118, 132, .75);
}

.section-materials
{
    padding-bottom: 0 !important;
}

.person
{
    margin-bottom: 40px;
}

.person .b-image
{
    margin-bottom: 30px;

    border-radius: 50%;
}

.person .person-info h5
{
    font-weight: 700;
    line-height: 24px;

    margin: 0;
}

.person .person-info p
{
    font-size: 14px;
    line-height: 24px;
}

.person .person-info p a
{
    text-decoration: underline;

    color: #000;
}

.person .person-info p a:hover
{
    text-decoration: none;
}

.person-text
{
    font-style: italic;

    margin-bottom: 40px;
}

.person-text p
{
    margin-bottom: 20px;
}

.litigation
{
    margin-bottom: 40px;
    padding: 55px 20px;

    text-align: center;

    border-radius: 4px;
    background: #fff;
}

.litigation .b-image
{
    margin-bottom: 50px;
}

.litigation .b-text h5
{
    font-weight: 700;

    margin: 0;
}

.litigation .b-text h5 a
{
    text-decoration: underline;

    color: #000;
}

.litigation .b-text h5 a:hover
{
    text-decoration: none;
}

.isotope-filter
{
    margin-top: 50px;
    margin-bottom: 50px;
}

.isotope-filter .tab-list
{
    -ms-flex-pack: center;
    justify-content: center;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

.isotope-filter .tab-list li
{
    margin-bottom: 7px;
}

.more-center
{
    margin-top: 50px;
}

.article-loaders
{
    display: block;

    text-align: center;
}

.article-loaders img
{
    display: none;
}

.masonry-wrap
{
    padding-top: 60px;
    padding-right: 30px;
    padding-left: 30px;
}

.masonry-overflow
{
    display: -ms-flexbox;
    display: flex;
    overflow: hidden;

    -ms-flex-pack: center;
    justify-content: center;
}

.masonry
{
    position: relative;

    width: 100%;
    margin-top: -30px;
    margin-right: -45px;
    margin-left: -45px;
}

.masonry:before,
.masonry:after
{
    position: absolute;
    top: 30px;

    display: none;

    width: 1px;
    height: 100%;

    content: '';

    background: #dee3e7;
}

.masonry:after
{
    right: 33.33333%;
}

.masonry-item
{
    padding-top: 30px;

    border-bottom: 1px solid #dee3e7;
}

.blocks__article
{
    position: relative;

    margin-bottom: 62px;
}

.blocks__article .article__top
{
    position: relative;

    overflow: hidden;
}

.blocks__article .article__top .article__top-link
{
    position: absolute;
    z-index: 3;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: block;
}

.blocks__article .article__top .article__top-picture
{
    position: relative;

    display: block;

    text-align: center;
}

.blocks__article .article__top .article__top-picture:before
{
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: block;

    content: '';

    opacity: 0;
    background-color: #000;
}

.blocks__article .article__top .article__top-picture:after
{
    position: absolute;
    z-index: 2;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: block;

    content: '';
    transition: opacity .25s ease;

    opacity: 0;
    background: #687684;
    background: linear-gradient(45deg, #687684 0%, #f3ba00 100%);
}

.blocks__article .article__bottom
{
    clear: both;

    padding: 12px 0 20px 0;
}

.blocks__article .article__bottom .story-top
{
    display: -ms-flexbox;
    display: flex;

    margin-bottom: 10px;

    -ms-flex-align: center;
    align-items: center;
}

.blocks__article .article__bottom .story-top .story__time
{
    font-size: 10px;

    display: block;

    margin-right: 10px;
    margin-bottom: 5px;

    text-decoration: none;
    text-transform: uppercase;

    opacity: .33;
    color: #000;
}

.blocks__article .article__bottom .story-top .label
{
    font-size: 10px;
    font-weight: bold;

    padding: 5px 10px;

    text-decoration: none;
    text-transform: uppercase;

    color: #687684;
    border: 1px solid #dee3e7;
    border-radius: 10px;
}

.blocks__article .article__bottom .article__title
{
    margin: 0 0 33px 0;
}

.blocks__article .article__bottom .article__title a
{
    font-size: 16px;
    font-weight: 900;
    line-height: 24px;

    transition: all .25s ease;
    text-decoration: none;

    color: #000;
    border-bottom: 1px solid rgba(0, 0, 0, .2);
}

.blocks__article .article__bottom .article__source
{
    text-decoration: none;
}

.blocks__article .article__bottom .article__source .article__source-img
{
    display: block;
    float: left;

    margin-right: 8px;

    text-decoration: none;

    border: 1px solid rgba(0, 0, 0, .2);
}

.blocks__article .article__bottom .article__source .article__source-link
{
    font-size: 10px;
    font-weight: lighter;
    line-height: 24px;

    transition: all .25s ease;
    text-decoration: none;

    color: #000;
    border-bottom: 1px solid rgba(0, 0, 0, .2);
}

.testimonial-text
{
    margin-bottom: 30px;
}

.testimonial-text p
{
    font-size: 16px;
    font-style: italic;
    line-height: 24px;

    margin: 0;
}

.testimonial-link
{
    margin-bottom: 20px;
}

.testimonial-link > a
{
    position: relative;

    display: inline-block;
}

.testimonial-link > a:before
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    opacity: .5;
    background: #687684;
}

.testimonial-link > a:after
{
    position: absolute;
    top: 50%;
    left: 50%;

    width: 30px;
    height: 30px;

    content: '';
    transform: translate(-50%, -50%);

    background: url('../images/magnifier.png') no-repeat center;
}

.testimonial-link .caption
{
    display: none;
}

.b-testimonials-list
{
    padding-top: 60px;
}

.lg-sub-html
{
    text-align: left;
}

.lg-sub-html .testimonial-author
{
    -ms-flex-pack: center;
    justify-content: center;
}

.testimonial-row
{
    margin-bottom: 60px;
    padding-bottom: 40px;

    border-bottom: 1px solid #c6cdd3;
}

.testimonial-row .testimonial-author
{
    -ms-flex-pack: start;
    justify-content: flex-start;
}

.testimonial-author
{
    display: -moz-flex;
    display:  -ms-flex;
    display:   -o-flex;
    display: -ms-flexbox;
    display:      flex;

    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: center;
    justify-content: center;
}

.testimonial-author .author-name
{
    margin-left: 15px;
}

.testimonial-author h4
{
    font-size: 18px;
    font-weight: 600;
    line-height: 24px;

    margin: 0;
}

.testimonial-author p
{
    font-size: 14px;
    line-height: 24px;

    margin: 0;
}

.testimonial-author img
{
    width: 60px;
    height: 60px;

    border-radius: 50%;
}

.testimonial-slider .slick-prev,
.testimonial-slider .slick-next
{
    z-index: 1;
    top: 100%;

    width: 55px;
    height: 55px;

    border-radius: 50%;
}

.testimonial-slider .slick-prev:before,
.testimonial-slider .slick-next:before
{
    display: none;
}

.testimonial-slider .slick-prev
{
    left: calc(50% - 70px);

    background: #fff url(../images/slick-prev.png) no-repeat center;
}

.testimonial-slider .slick-next
{
    right: calc(50% - 70px);

    background: #fff url(../images/slick-next.png) no-repeat center;
}

#map
{
    height: 480px;
}

.contacts-title
{
    position: relative;

    margin-top: 55px;
    margin-bottom: 20px;
    padding-bottom: 20px;

    border-bottom: 1px solid #c6cdd3;
}

.contacts-title h3
{
    font-weight: 700;

    margin: 0;
}

.contacts-sub-title p,
.contacts-sub-title a
{
    font-size: 18px;
    font-weight: 700;
    line-height: 30px;

    margin: 0;

    color: #000;
}

.contacts-sub-title a
{
    border-bottom: 1px solid rgba(0, 0, 0, .2);
}

.contacts-sub-title a:hover
{
    border-color: black;
}

.overflow-hidden
{
    overflow: hidden;

    max-width: 1360px;
}

.offset-section
{
    width: calc(100% + 60px);
}

.offset-section > .row
{
    margin-right: 0;
    margin-left: 0;
}

.section-contacts .tab-list
{
    margin-top: 55px;
    margin-bottom: 25px;
}

.section-contacts .form-wrapper
{
    margin-top: 95px;
}

.resources-tabs
{
    display: -moz-flex;
    display:  -ms-flex;
    display:   -o-flex;
    display: -ms-flexbox;
    display:      flex;
        flex-direction: column;

    -ms-flex-direction: column;
}

.resources-tabs .tab-item
{
    text-align: center;
}

.resources-tabs .tab-item h3
{
    font-weight: 700;

    max-width: 75%;
    margin-right: auto;
    margin-bottom: 50px;
    margin-left: auto;
    padding-bottom: 50px;

    border-bottom: 1px solid #c6cdd3;
}

.resources-tabs .tab-list
{
    display: -ms-flexbox;
    display: flex;

    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: center;
    justify-content: center;
}

.resources-tabs .tab-list svg
{
    width: 100%;
    height: 520px;
}

.resources-tabs .tab-list
{
    position: relative;

    width: 100%;
}

.resources-tabs .tab-list #_x30_1.active
{
    transform: translateX(-30px) translateY(-20px);
}

.resources-tabs .tab-list #_x30_2_1_.active
{
    transform: translateX(30px) translateY(-20px);
}

.resources-tabs .tab-list #_x30_3.active
{
    transform: translateX(0px) translateY(30px);
}

.resources-tabs .tab-list svg
{
    position: relative;

    overflow: visible;

    max-width: 575px;

    transition: all .3s ease;
}

.resources-tabs .tab-list svg tspan
{
    font-weight: 600;
}

.resources-tabs .tab-list svg tspan.st10
{
    font-size: 30px;

    text-decoration: underline;
}

.resources-tabs .tab-list svg tspan.small-span
{
    font-size: 18px;
}

.resources-tabs .tab-list svg g
{
    transition: all .3s ease;
    transform: translateX(0) translateY(0);
}

.resources-tabs .tab-list svg g:hover,
.resources-tabs .tab-list svg g.active
{
    cursor: pointer;
}

.resources-tabs .tab-list svg g:hover .st0,
.resources-tabs .tab-list svg g:hover .st3,
.resources-tabs .tab-list svg g:hover .st4,
.resources-tabs .tab-list svg g:hover .st6,
.resources-tabs .tab-list svg g:hover .st7,
.resources-tabs .tab-list svg g:hover .st8,
.resources-tabs .tab-list svg g:hover .st9,
.resources-tabs .tab-list svg g.active .st0,
.resources-tabs .tab-list svg g.active .st3,
.resources-tabs .tab-list svg g.active .st4,
.resources-tabs .tab-list svg g.active .st6,
.resources-tabs .tab-list svg g.active .st7,
.resources-tabs .tab-list svg g.active .st8,
.resources-tabs .tab-list svg g.active .st9
{
    fill: #f4ba00;
}

.resources-tabs .tab-list svg g:hover .st3,
.resources-tabs .tab-list svg g:hover .st8,
.resources-tabs .tab-list svg g:hover .st6,
.resources-tabs .tab-list svg g.active .st3,
.resources-tabs .tab-list svg g.active .st8,
.resources-tabs .tab-list svg g.active .st6
{
    fill: #657280;
}

.resources-tabs .tab-list svg g:hover tspan,
.resources-tabs .tab-list svg g.active tspan
{
    fill: #fff;
}

.resources-tabs .tab-list svg g:hover tspan.small-span,
.resources-tabs .tab-list svg g.active tspan.small-span
{
    fill: #000;
}

.tab-content
{
    position: relative;
}

.tab-content .tab-item
{
    position: absolute;
    top: 0;

    visibility: hidden;

    transition: all .3s ease;

    opacity: 0;
}

.tab-content .tab-item.active
{
    position: relative;

    visibility: visible;

    transition: all .3s ease .3s;

    opacity: 1;
}

.tab-list
{
    display: -ms-flexbox;
    display: flex;

    margin: 0;
    padding: 0;

    list-style-type: none;
}

.tab-list a
{
    font-size: 14px;
    font-weight: 700;

    padding: 5px 10px;

    text-transform: uppercase;

    color: #000;
    border: 1px solid transparent;
}

.tab-list a.active
{
    color: #657280;
    border-color: #657280;
    border-radius: 20px;
}

.tab-list li.active a
{
    color: #657280;
    border-color: #657280;
    border-radius: 20px;
}

@font-face
{
    font-family: 'fontello';font-weight: normal;font-style: normal;src: url('../fonts/fontello.eot');src: url('../fonts/fontello.eot#iefix') format('embedded-opentype'), url('../fonts/fontello.woff') format('woff'), url('../fonts/fontello.ttf') format('truetype'), url('../fonts/fontello.svg#fontello') format('svg');
}

@font-face
{
    font-family: 'slick';font-weight: normal;font-style: normal;
}

@font-face
{
    font-family: 'lg';font-weight: normal;font-style: normal;src: url('../fonts/lg/lg.eot?n1z373');src: url('../fonts/lg/lg.eot?#iefixn1z373') format('embedded-opentype'), url('../fonts/lg/lg.woff?n1z373') format('woff'), url('../fonts/lg/lg.ttf?n1z373') format('truetype'), url('../fonts/lg/lg.svg?n1z373#lg') format('svg');
}

@media only screen and (min-device-width: 320px) and (max-device-width: 568px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape)
{
    .site-header .site-nav .nav-wrapper
    {
        overflow: auto;

        height: 75vh;
    }
}

@media print, screen and (min-width: 48em) and (min-width: 48em)
{
    .medium-expand
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }
}

@media print, screen and (min-width: 48em)
{
    .row .row
    {
        margin-right: -2.14286rem;
        margin-left: -2.14286rem;
    }

    .column,
    .columns
    {
        padding-right: 2.14286rem;
        padding-left: 2.14286rem;
    }

    .medium-1
    {
        max-width: 8.33333%;

        -ms-flex: 0 0 8.33333%;
            flex: 0 0 8.33333%;
    }

    .medium-offset-0
    {
        margin-left: 0;
    }

    .medium-2
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .medium-offset-1
    {
        margin-left: 8.33333%;
    }

    .medium-3
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .medium-offset-2
    {
        margin-left: 16.66667%;
    }

    .medium-4
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .medium-offset-3
    {
        margin-left: 25%;
    }

    .medium-5
    {
        max-width: 41.66667%;

        -ms-flex: 0 0 41.66667%;
            flex: 0 0 41.66667%;
    }

    .medium-offset-4
    {
        margin-left: 33.33333%;
    }

    .medium-6
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .medium-offset-5
    {
        margin-left: 41.66667%;
    }

    .medium-7
    {
        max-width: 58.33333%;

        -ms-flex: 0 0 58.33333%;
            flex: 0 0 58.33333%;
    }

    .medium-offset-6
    {
        margin-left: 50%;
    }

    .medium-8
    {
        max-width: 66.66667%;

        -ms-flex: 0 0 66.66667%;
            flex: 0 0 66.66667%;
    }

    .medium-offset-7
    {
        margin-left: 58.33333%;
    }

    .medium-9
    {
        max-width: 75%;

        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    }

    .medium-offset-8
    {
        margin-left: 66.66667%;
    }

    .medium-10
    {
        max-width: 83.33333%;

        -ms-flex: 0 0 83.33333%;
            flex: 0 0 83.33333%;
    }

    .medium-offset-9
    {
        margin-left: 75%;
    }

    .medium-11
    {
        max-width: 91.66667%;

        -ms-flex: 0 0 91.66667%;
            flex: 0 0 91.66667%;
    }

    .medium-offset-10
    {
        margin-left: 83.33333%;
    }

    .medium-12
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .medium-offset-11
    {
        margin-left: 91.66667%;
    }

    .medium-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .medium-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .medium-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .medium-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .medium-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .medium-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .medium-up-1
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-1 > .column,
    .medium-up-1 > .columns
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .medium-up-2
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-2 > .column,
    .medium-up-2 > .columns
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .medium-up-3
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-3 > .column,
    .medium-up-3 > .columns
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .medium-up-4
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-4 > .column,
    .medium-up-4 > .columns
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .medium-up-5
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-5 > .column,
    .medium-up-5 > .columns
    {
        max-width: 20%;

        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    }

    .medium-up-6
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-6 > .column,
    .medium-up-6 > .columns
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .medium-up-7
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-7 > .column,
    .medium-up-7 > .columns
    {
        max-width: 14.28571%;

        -ms-flex: 0 0 14.28571%;
            flex: 0 0 14.28571%;
    }

    .medium-up-8
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .medium-up-8 > .column,
    .medium-up-8 > .columns
    {
        max-width: 12.5%;

        -ms-flex: 0 0 12.5%;
            flex: 0 0 12.5%;
    }

    .medium-flex-dir-row
    {
            flex-direction: row;

        -ms-flex-direction: row;
    }

    .medium-flex-dir-row-reverse
    {
            flex-direction: row-reverse;

        -ms-flex-direction: row-reverse;
    }

    .medium-flex-dir-column
    {
            flex-direction: column;

        -ms-flex-direction: column;
    }

    .medium-flex-dir-column-reverse
    {
            flex-direction: column-reverse;

        -ms-flex-direction: column-reverse;
    }

    .medium-flex-child-auto
    {
        -ms-flex: 1 1 auto;
            flex: 1 1 auto;
    }

    .medium-flex-child-grow
    {
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    }

    .medium-flex-child-shrink
    {
        -ms-flex: 0 1 auto;
            flex: 0 1 auto;
    }

    .row.medium-unstack > .column,
    .row.medium-unstack > .columns
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }

    .medium-collapse > .column,
    .medium-collapse > .columns
    {
        padding-right: 0;
        padding-left: 0;
    }

    .medium-uncollapse > .column,
    .medium-uncollapse > .columns
    {
        padding-right: 2.14286rem;
        padding-left: 2.14286rem;
    }

    .column-block
    {
        margin-bottom: 4.28571rem;
    }

    .column-block > :last-child
    {
        margin-bottom: 0;
    }

    h1
    {
        font-size: 3.42857rem;
    }

    h2
    {
        font-size: 2.57143rem;
    }

    h3
    {
        font-size: 1.71429rem;
    }

    h4
    {
        font-size: 1.28571rem;
    }

    h5
    {
        font-size: 1.14286rem;
    }

    h6
    {
        font-size: 1rem;
    }

    .medium-text-left
    {
        text-align: left;
    }

    .medium-text-right
    {
        text-align: right;
    }

    .medium-text-center
    {
        text-align: center;
    }

    .medium-text-justify
    {
        text-align: justify;
    }

    .medium-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .medium-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .medium-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .medium-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .medium-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .medium-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .site-footer_inner
    {
            flex-direction: row;

        -ms-flex-direction: row;
    }

    .footer-link
    {
        margin-right: 70px;
        padding-right: 15px;
        padding-left: 15px;
    }

    .footer-link .link-image
    {
        min-width: auto;
        margin-right: 35px;
    }

    .section-title
    {
        padding-top: 105px;
    }

    .section
    {
        padding-bottom: 115px;
    }

    .intro-section
    {
        padding-top: 75px;
    }

    .intro-section .intro-title h1
    {
        line-height: 50px;
    }

    .intro-section .intro-bottom
    {
        margin-bottom: 50px;
    }

    .grid-item.col-2
    {
            flex-direction: row;

        -ms-flex-direction: row;
    }

    .grid-item.col-2 .grid-item--left,
    .grid-item.col-2 .grid-item--right
    {
        width: 50%;
        padding: 15px 30px;
    }

    .grid-item.col-2 .grid-item--right
    {
        padding-bottom: 0;

        border-bottom: none;
        border-left: 1px solid #c6cdd3;
    }

    .masonry
    {
        margin-right: -30px;
        margin-left: -30px;
    }

    .masonry:before
    {
        left: 50%;

        display: block;
    }

    .blocks__article .article__bottom
    {
        padding: 20px 0 20px 0;
    }

    .blocks__article .article__bottom .story-top .story__time
    {
        margin-bottom: 4px;
    }

    .resources-tabs .tab-list
    {
        margin-bottom: 100px;
    }
}

@media print, screen and (min-width: 64em) and (min-width: 64em)
{
    .large-expand
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }
}

@media print, screen and (min-width: 64em)
{
    .row .row
    {
        margin-right: -2.14286rem;
        margin-left: -2.14286rem;
    }

    .large-1
    {
        max-width: 8.33333%;

        -ms-flex: 0 0 8.33333%;
            flex: 0 0 8.33333%;
    }

    .large-offset-0
    {
        margin-left: 0;
    }

    .large-2
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .large-offset-1
    {
        margin-left: 8.33333%;
    }

    .large-3
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .large-offset-2
    {
        margin-left: 16.66667%;
    }

    .large-4
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .large-offset-3
    {
        margin-left: 25%;
    }

    .large-5
    {
        max-width: 41.66667%;

        -ms-flex: 0 0 41.66667%;
            flex: 0 0 41.66667%;
    }

    .large-offset-4
    {
        margin-left: 33.33333%;
    }

    .large-6
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .large-offset-5
    {
        margin-left: 41.66667%;
    }

    .large-7
    {
        max-width: 58.33333%;

        -ms-flex: 0 0 58.33333%;
            flex: 0 0 58.33333%;
    }

    .large-offset-6
    {
        margin-left: 50%;
    }

    .large-8
    {
        max-width: 66.66667%;

        -ms-flex: 0 0 66.66667%;
            flex: 0 0 66.66667%;
    }

    .large-offset-7
    {
        margin-left: 58.33333%;
    }

    .large-9
    {
        max-width: 75%;

        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    }

    .large-offset-8
    {
        margin-left: 66.66667%;
    }

    .large-10
    {
        max-width: 83.33333%;

        -ms-flex: 0 0 83.33333%;
            flex: 0 0 83.33333%;
    }

    .large-offset-9
    {
        margin-left: 75%;
    }

    .large-11
    {
        max-width: 91.66667%;

        -ms-flex: 0 0 91.66667%;
            flex: 0 0 91.66667%;
    }

    .large-offset-10
    {
        margin-left: 83.33333%;
    }

    .large-12
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .large-offset-11
    {
        margin-left: 91.66667%;
    }

    .large-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .large-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .large-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .large-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .large-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .large-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .large-up-1
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-1 > .column,
    .large-up-1 > .columns
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .large-up-2
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-2 > .column,
    .large-up-2 > .columns
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .large-up-3
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-3 > .column,
    .large-up-3 > .columns
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .large-up-4
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-4 > .column,
    .large-up-4 > .columns
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .large-up-5
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-5 > .column,
    .large-up-5 > .columns
    {
        max-width: 20%;

        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    }

    .large-up-6
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-6 > .column,
    .large-up-6 > .columns
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .large-up-7
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-7 > .column,
    .large-up-7 > .columns
    {
        max-width: 14.28571%;

        -ms-flex: 0 0 14.28571%;
            flex: 0 0 14.28571%;
    }

    .large-up-8
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .large-up-8 > .column,
    .large-up-8 > .columns
    {
        max-width: 12.5%;

        -ms-flex: 0 0 12.5%;
            flex: 0 0 12.5%;
    }

    .large-flex-dir-row
    {
            flex-direction: row;

        -ms-flex-direction: row;
    }

    .large-flex-dir-row-reverse
    {
            flex-direction: row-reverse;

        -ms-flex-direction: row-reverse;
    }

    .large-flex-dir-column
    {
            flex-direction: column;

        -ms-flex-direction: column;
    }

    .large-flex-dir-column-reverse
    {
            flex-direction: column-reverse;

        -ms-flex-direction: column-reverse;
    }

    .large-flex-child-auto
    {
        -ms-flex: 1 1 auto;
            flex: 1 1 auto;
    }

    .large-flex-child-grow
    {
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    }

    .large-flex-child-shrink
    {
        -ms-flex: 0 1 auto;
            flex: 0 1 auto;
    }

    .row.large-unstack > .column,
    .row.large-unstack > .columns
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }

    .large-collapse > .column,
    .large-collapse > .columns
    {
        padding-right: 0;
        padding-left: 0;
    }

    .large-uncollapse > .column,
    .large-uncollapse > .columns
    {
        padding-right: 2.14286rem;
        padding-left: 2.14286rem;
    }

    .large-text-left
    {
        text-align: left;
    }

    .large-text-right
    {
        text-align: right;
    }

    .large-text-center
    {
        text-align: center;
    }

    .large-text-justify
    {
        text-align: justify;
    }

    .large-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .large-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .large-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .large-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .large-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .large-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .form-wrapper .title h3
    {
        width: 75%;
    }

    .intro-section .intro-text
    {
        width: 75%;
    }

    .intro-section .intro-bottom
    {
        margin-bottom: 100px;
    }

    .grid-item.col-2 .grid-item-content
    {
        width: calc(83.3333333% - 60px);
    }

    .person
    {
        margin-bottom: 70px;
    }

    .person-text
    {
        margin-bottom: 70px;
    }

    .litigation
    {
        margin-bottom: 70px;
        padding: 55px;
    }

    .masonry:after
    {
        display: block;
    }

    .masonry:before
    {
        left: 33.33333%;
    }

    .testimonial-text
    {
        margin-bottom: 30px;
        padding-bottom: 30px;

        border-bottom: 1px solid #c6cdd3;
    }

    .testimonial-row
    {
        margin-bottom: 0;
        padding-bottom: 0;

        border-bottom: none;
    }

    .testimonial-author
    {
        -ms-flex-pack: start;
        justify-content: flex-start;
    }

    .testimonial-slider .slick-prev,
    .testimonial-slider .slick-next
    {
        top: 50%;
    }

    .testimonial-slider .slick-prev
    {
        left: 0;
    }

    .testimonial-slider .slick-next
    {
        right: 0;
    }

    .resources-tabs .tab-list
    {
        margin-bottom: 0;
    }

    .resources-tabs
    {
            flex-direction: row;

        -ms-flex-direction: row;
    }

    .resources-tabs .tab-content
    {
        display: -moz-flex;
        display:  -ms-flex;
        display:   -o-flex;
        display: -ms-flexbox;
        display:      flex;

        -ms-flex-align: center;
        align-items: center;
    }

    .resources-tabs .tab-content .tab-item
    {
        transition-property: opacity;
    }

    .resources-tabs .tab-content .tab-item:not(.active)
    {
        top: 50%;

        transform: translateY(-50%);
    }

    .resources-tabs .tab-list
    {
        float: left;

        width: 50%;
    }

    .resources-tabs .tab-list svg.active
    {
        transform: translateX(0);
    }

    .resources-tabs .tab-list svg
    {
        left: 0;
    }
}

@media screen and (min-width: 80em)
{
    .row .row
    {
        margin-right: -2.14286rem;
        margin-left: -2.14286rem;
    }

    .xlarge-1
    {
        max-width: 8.33333%;

        -ms-flex: 0 0 8.33333%;
            flex: 0 0 8.33333%;
    }

    .xlarge-offset-0
    {
        margin-left: 0;
    }

    .xlarge-2
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .xlarge-offset-1
    {
        margin-left: 8.33333%;
    }

    .xlarge-3
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .xlarge-offset-2
    {
        margin-left: 16.66667%;
    }

    .xlarge-4
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .xlarge-offset-3
    {
        margin-left: 25%;
    }

    .xlarge-5
    {
        max-width: 41.66667%;

        -ms-flex: 0 0 41.66667%;
            flex: 0 0 41.66667%;
    }

    .xlarge-offset-4
    {
        margin-left: 33.33333%;
    }

    .xlarge-6
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .xlarge-offset-5
    {
        margin-left: 41.66667%;
    }

    .xlarge-7
    {
        max-width: 58.33333%;

        -ms-flex: 0 0 58.33333%;
            flex: 0 0 58.33333%;
    }

    .xlarge-offset-6
    {
        margin-left: 50%;
    }

    .xlarge-8
    {
        max-width: 66.66667%;

        -ms-flex: 0 0 66.66667%;
            flex: 0 0 66.66667%;
    }

    .xlarge-offset-7
    {
        margin-left: 58.33333%;
    }

    .xlarge-9
    {
        max-width: 75%;

        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    }

    .xlarge-offset-8
    {
        margin-left: 66.66667%;
    }

    .xlarge-10
    {
        max-width: 83.33333%;

        -ms-flex: 0 0 83.33333%;
            flex: 0 0 83.33333%;
    }

    .xlarge-offset-9
    {
        margin-left: 75%;
    }

    .xlarge-11
    {
        max-width: 91.66667%;

        -ms-flex: 0 0 91.66667%;
            flex: 0 0 91.66667%;
    }

    .xlarge-offset-10
    {
        margin-left: 83.33333%;
    }

    .xlarge-12
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .xlarge-offset-11
    {
        margin-left: 91.66667%;
    }

    .xlarge-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .xlarge-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .xlarge-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .xlarge-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .xlarge-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .xlarge-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .xlarge-up-1
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-1 > .column,
    .xlarge-up-1 > .columns
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .xlarge-up-2
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-2 > .column,
    .xlarge-up-2 > .columns
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .xlarge-up-3
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-3 > .column,
    .xlarge-up-3 > .columns
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .xlarge-up-4
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-4 > .column,
    .xlarge-up-4 > .columns
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .xlarge-up-5
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-5 > .column,
    .xlarge-up-5 > .columns
    {
        max-width: 20%;

        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    }

    .xlarge-up-6
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-6 > .column,
    .xlarge-up-6 > .columns
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .xlarge-up-7
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-7 > .column,
    .xlarge-up-7 > .columns
    {
        max-width: 14.28571%;

        -ms-flex: 0 0 14.28571%;
            flex: 0 0 14.28571%;
    }

    .xlarge-up-8
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xlarge-up-8 > .column,
    .xlarge-up-8 > .columns
    {
        max-width: 12.5%;

        -ms-flex: 0 0 12.5%;
            flex: 0 0 12.5%;
    }

    .xlarge-flex-dir-row
    {
            flex-direction: row;

        -ms-flex-direction: row;
    }

    .xlarge-flex-dir-row-reverse
    {
            flex-direction: row-reverse;

        -ms-flex-direction: row-reverse;
    }

    .xlarge-flex-dir-column
    {
            flex-direction: column;

        -ms-flex-direction: column;
    }

    .xlarge-flex-dir-column-reverse
    {
            flex-direction: column-reverse;

        -ms-flex-direction: column-reverse;
    }

    .xlarge-flex-child-auto
    {
        -ms-flex: 1 1 auto;
            flex: 1 1 auto;
    }

    .xlarge-flex-child-grow
    {
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    }

    .xlarge-flex-child-shrink
    {
        -ms-flex: 0 1 auto;
            flex: 0 1 auto;
    }

    .row.xlarge-unstack > .column,
    .row.xlarge-unstack > .columns
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }

    .xlarge-collapse > .column,
    .xlarge-collapse > .columns
    {
        padding-right: 0;
        padding-left: 0;
    }

    .xlarge-uncollapse > .column,
    .xlarge-uncollapse > .columns
    {
        padding-right: 2.14286rem;
        padding-left: 2.14286rem;
    }

    .xlarge-text-left
    {
        text-align: left;
    }

    .xlarge-text-right
    {
        text-align: right;
    }

    .xlarge-text-center
    {
        text-align: center;
    }

    .xlarge-text-justify
    {
        text-align: justify;
    }

    .xlarge-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .xlarge-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .xlarge-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .xlarge-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .xlarge-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .xlarge-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .site-header
    {
        max-width: 1560px;
        margin-right: auto;
        margin-left: auto;

        -ms-flex-pack: start;
        justify-content: flex-start;
    }

    .site-header .site-nav
    {
        position: relative;

        visibility: visible;

        height: auto;

        opacity: 1;
        border-right: 1px solid #dee3e7;
        border-left: 1px solid #dee3e7;
    }

    .site-header .site-nav a
    {
        font-size: 12px;
        line-height: 1;
    }

    .site-header .site-nav ul
    {
            flex-direction: row;

        -ms-flex-direction: row;
        -ms-flex-align: start;
        align-items: flex-start;
    }

    .site-header .site-nav ul li
    {
        margin: 0 15px;
    }

    .menu-button
    {
        display: none;
    }
}

@media screen and (min-width: 80em) and (min-width: 80em)
{
    .xlarge-expand
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }
}

@media screen and (min-width: 85.375em)
{
    .row .row
    {
        margin-right: -2.14286rem;
        margin-left: -2.14286rem;
    }

    .xxlarge-1
    {
        max-width: 8.33333%;

        -ms-flex: 0 0 8.33333%;
            flex: 0 0 8.33333%;
    }

    .xxlarge-offset-0
    {
        margin-left: 0;
    }

    .xxlarge-2
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .xxlarge-offset-1
    {
        margin-left: 8.33333%;
    }

    .xxlarge-3
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .xxlarge-offset-2
    {
        margin-left: 16.66667%;
    }

    .xxlarge-4
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .xxlarge-offset-3
    {
        margin-left: 25%;
    }

    .xxlarge-5
    {
        max-width: 41.66667%;

        -ms-flex: 0 0 41.66667%;
            flex: 0 0 41.66667%;
    }

    .xxlarge-offset-4
    {
        margin-left: 33.33333%;
    }

    .xxlarge-6
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .xxlarge-offset-5
    {
        margin-left: 41.66667%;
    }

    .xxlarge-7
    {
        max-width: 58.33333%;

        -ms-flex: 0 0 58.33333%;
            flex: 0 0 58.33333%;
    }

    .xxlarge-offset-6
    {
        margin-left: 50%;
    }

    .xxlarge-8
    {
        max-width: 66.66667%;

        -ms-flex: 0 0 66.66667%;
            flex: 0 0 66.66667%;
    }

    .xxlarge-offset-7
    {
        margin-left: 58.33333%;
    }

    .xxlarge-9
    {
        max-width: 75%;

        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    }

    .xxlarge-offset-8
    {
        margin-left: 66.66667%;
    }

    .xxlarge-10
    {
        max-width: 83.33333%;

        -ms-flex: 0 0 83.33333%;
            flex: 0 0 83.33333%;
    }

    .xxlarge-offset-9
    {
        margin-left: 75%;
    }

    .xxlarge-11
    {
        max-width: 91.66667%;

        -ms-flex: 0 0 91.66667%;
            flex: 0 0 91.66667%;
    }

    .xxlarge-offset-10
    {
        margin-left: 83.33333%;
    }

    .xxlarge-12
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .xxlarge-offset-11
    {
        margin-left: 91.66667%;
    }

    .xxlarge-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .xxlarge-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .xxlarge-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .xxlarge-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .xxlarge-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .xxlarge-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .xxlarge-up-1
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-1 > .column,
    .xxlarge-up-1 > .columns
    {
        max-width: 100%;

        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    }

    .xxlarge-up-2
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-2 > .column,
    .xxlarge-up-2 > .columns
    {
        max-width: 50%;

        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    }

    .xxlarge-up-3
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-3 > .column,
    .xxlarge-up-3 > .columns
    {
        max-width: 33.33333%;

        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    }

    .xxlarge-up-4
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-4 > .column,
    .xxlarge-up-4 > .columns
    {
        max-width: 25%;

        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    }

    .xxlarge-up-5
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-5 > .column,
    .xxlarge-up-5 > .columns
    {
        max-width: 20%;

        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    }

    .xxlarge-up-6
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-6 > .column,
    .xxlarge-up-6 > .columns
    {
        max-width: 16.66667%;

        -ms-flex: 0 0 16.66667%;
            flex: 0 0 16.66667%;
    }

    .xxlarge-up-7
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-7 > .column,
    .xxlarge-up-7 > .columns
    {
        max-width: 14.28571%;

        -ms-flex: 0 0 14.28571%;
            flex: 0 0 14.28571%;
    }

    .xxlarge-up-8
    {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    }

    .xxlarge-up-8 > .column,
    .xxlarge-up-8 > .columns
    {
        max-width: 12.5%;

        -ms-flex: 0 0 12.5%;
            flex: 0 0 12.5%;
    }

    .xxlarge-flex-dir-row
    {
            flex-direction: row;

        -ms-flex-direction: row;
    }

    .xxlarge-flex-dir-row-reverse
    {
            flex-direction: row-reverse;

        -ms-flex-direction: row-reverse;
    }

    .xxlarge-flex-dir-column
    {
            flex-direction: column;

        -ms-flex-direction: column;
    }

    .xxlarge-flex-dir-column-reverse
    {
            flex-direction: column-reverse;

        -ms-flex-direction: column-reverse;
    }

    .xxlarge-flex-child-auto
    {
        -ms-flex: 1 1 auto;
            flex: 1 1 auto;
    }

    .xxlarge-flex-child-grow
    {
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    }

    .xxlarge-flex-child-shrink
    {
        -ms-flex: 0 1 auto;
            flex: 0 1 auto;
    }

    .row.xxlarge-unstack > .column,
    .row.xxlarge-unstack > .columns
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }

    .xxlarge-collapse > .column,
    .xxlarge-collapse > .columns
    {
        padding-right: 0;
        padding-left: 0;
    }

    .xxlarge-uncollapse > .column,
    .xxlarge-uncollapse > .columns
    {
        padding-right: 2.14286rem;
        padding-left: 2.14286rem;
    }

    .xxlarge-text-left
    {
        text-align: left;
    }

    .xxlarge-text-right
    {
        text-align: right;
    }

    .xxlarge-text-center
    {
        text-align: center;
    }

    .xxlarge-text-justify
    {
        text-align: justify;
    }

    .xxlarge-order-1
    {
        -ms-flex-order: 1;
        order: 1;
    }

    .xxlarge-order-2
    {
        -ms-flex-order: 2;
        order: 2;
    }

    .xxlarge-order-3
    {
        -ms-flex-order: 3;
        order: 3;
    }

    .xxlarge-order-4
    {
        -ms-flex-order: 4;
        order: 4;
    }

    .xxlarge-order-5
    {
        -ms-flex-order: 5;
        order: 5;
    }

    .xxlarge-order-6
    {
        -ms-flex-order: 6;
        order: 6;
    }

    .contacts-title
    {
        height: auto !important;
    }
}

@media screen and (min-width: 85.375em) and (min-width: 85.375em)
{
    .xxlarge-expand
    {
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    }
}

@media (min-width: 1025px)
{
    .lg-outer .lg-thumb-item
    {
        transition: border-color .25s ease;
    }
}

@media print
{
    *
    {
        color: black !important;
        background: transparent !important;
        box-shadow: none !important;
        text-shadow: none !important;
    }

    .show-for-print
    {
        display: block !important;
    }

    .hide-for-print
    {
        display: none !important;
    }

    table.show-for-print
    {
        display: table !important;
    }

    thead.show-for-print
    {
        display: table-header-group !important;
    }

    tbody.show-for-print
    {
        display: table-row-group !important;
    }

    tr.show-for-print
    {
        display: table-row !important;
    }

    td.show-for-print
    {
        display: table-cell !important;
    }

    th.show-for-print
    {
        display: table-cell !important;
    }

    a,
    a:visited
    {
        text-decoration: underline;
    }

    a[href]:after
    {
        content: ' (' attr(href) ')';
    }

    .ir a:after,
    a[href^='javascript:']:after,
    a[href^='#']:after
    {
        content: '';
    }

    abbr[title]:after
    {
        content: ' (' attr(title) ')';
    }

    pre,
    blockquote
    {
        border: 1px solid #8a8a8a;

        page-break-inside: avoid;
    }

    thead
    {
        display: table-header-group;
    }

    tr,
    img
    {
        page-break-inside: avoid;
    }

    img
    {
        max-width: 100% !important;
    }

    p,
    h2,
    h3
    {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3
    {
        page-break-after: avoid;
    }
}

@keyframes fadeIn
{
    0%
    {
        transform: translateY(30px);

        opacity: 0;
    }

    100%
    {
        transform: translateY(0);

        opacity: 1;
    }
}

@keyframes lg-right-end
{
    0%
    {
        left: 0;
    }

    50%
    {
        left: -30px;
    }

    100%
    {
        left: 0;
    }
}

@keyframes lg-left-end
{
    0%
    {
        left: 0;
    }

    50%
    {
        left: 30px;
    }

    100%
    {
        left: 0;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
